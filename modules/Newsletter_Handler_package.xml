<?xml version="1.0" encoding="UTF-8"?>
<modulepackage><package_guid/>
<package_data>a:5:{s:7:"jsfiles";a:0:{}s:8:"tplfiles";a:1:{i:0;s:23:"newsletter_handler.html";}s:8:"cssfiles";a:0:{}s:7:"layouts";a:0:{}s:12:"translations";a:0:{}}</package_data>
<module><name>Newsletter_Handler</name>
<description>Newsletter Handler Module V4.0.1 (for text and HTML newsletters)

Provides multilanguage handling for newsletter subscribing, cancellation and other features.

Based on the work of 4fb, www.x28.de, HerrB, 01.05.2007

Notes:
- The default language is english. Use the translation functionality to translate the module in other languages
- Create a template which includes this module and create an article using that template.
- Configure category/arcticle specifying handler article id</description>
<type>Content</type>
<input>   cInclude('frontend', 'includes/class.input.helper.php'); # Note, this file is located in &lt;client-path&gt;/includes!

   // Initialisation
   $oClientLang = new cApiClientLanguage(false, $client, $lang);
   $oClient     = new cApiClient($client);

   /*
   *  Used variables:
   *  JoinSel:         Selection, which group will be joined (Default, Selected, User specified)
   *  JoinMultiple:    If JoinSel = UserSelected then: More than one group may be selected
   *  JoinGroups:      Selected group(s)
   *  JoinMessageType: Message type for new recipients: User select (user), text or html
   *  FrontendLink:    Link to Frontend Users enabled?
   *  FrontendConfirm: Confirmation of newsletter subscription means: Activate frontend account, nothing
   *  FrontendDel:     Cancellation of newsletter subscription means: Delete frontend account, Deactivate account, nothing
   *  SenderEMail:     Sender e-mail address
   *  HandlerID:       ID of handler article
   *  ChangeEMailID:   ID of change e-mail handler article
   */
   $aSettings   = array();
   $aSettings['JoinSel']         = $oClientLang-&gt;getProperty('newsletter', 'joinsel');
   $aSettings['JoinMultiple']    = $oClientLang-&gt;getProperty('newsletter', 'joinmultiple');
   $aSettings['JoinGroups']      = $oClientLang-&gt;getProperty('newsletter', 'joingroups');
   $aSettings['JoinMessageType'] = $oClientLang-&gt;getProperty('newsletter', 'joinmessagetype');
   $aSettings['FrontendLink']    = $oClient-&gt;getProperty('newsletter', 'frontendlink'); # Note: Stored for client, as frontendusers are language independent
   $aSettings['FrontendConfirm'] = &quot;CMS_VALUE[5]&quot;;
   $aSettings['FrontendDel']     = &quot;CMS_VALUE[6]&quot;;
   $aSettings['SenderEMail']     = $oClient-&gt;getProperty('global', 'sender-email'); # This one could be recycled by other modules...

   // Setting default values
   // If there is no selection option set or if no groups has been selected, activate option Default
   if ($aSettings['JoinSel'] == '' || $aSettings['JoinGroups'] == '') {
      $aSettings['JoinSel'] = &quot;Default&quot;;
   }
   if ($aSettings['FrontendConfirm'] == '') {
      $aSettings['FrontendConfirm'] = &quot;ActivateUser&quot;;
   }
   if ($aSettings['FrontendDel'] == '') {
      $aSettings['FrontendDel'] = &quot;DeleteUser&quot;;
   }
   if (!is_numeric($_REQUEST['selHandlerCatArt'.$cnumber]) || $_REQUEST['selHandlerCatArt'.$cnumber] &lt; 0) {
      $_REQUEST['selHandlerCatArt'.$cnumber] = 0;
   }

   // Saving changes, if any
   if ($_REQUEST['hidAction'.$cnumber] == 'save')
   {
      if ($_REQUEST['radJoin'.$cnumber] != '' &amp;&amp; $_REQUEST['radJoin'.$cnumber] != $aSettings['JoinSel'])
      {
         $aSettings['JoinSel'] = $_REQUEST['radJoin'.$cnumber];
         $oClientLang-&gt;setProperty('newsletter', 'joinsel', $aSettings['JoinSel']);
      }
      if ($_REQUEST['ckbJoinMultiple'.$cnumber] != $aSettings['JoinMultiple'])
      {
         $aSettings['JoinMultiple'] = $_REQUEST['ckbJoinMultiple'.$cnumber];
         $oClientLang-&gt;setProperty('newsletter', 'joinmultiple', $aSettings['JoinMultiple']);
      }
      if ($_REQUEST['hidJoinGroups'.$cnumber] != '' &amp;&amp; $_REQUEST['hidJoinGroups'.$cnumber] != $aSettings['JoinGroups'])
      {
         $aSettings['JoinGroups'] = $_REQUEST['hidJoinGroups'.$cnumber];
         $oClientLang-&gt;setProperty('newsletter', 'joingroups', $aSettings['JoinGroups']);
      }
      if ($_REQUEST['selMessageType'.$cnumber] != $aSettings['JoinMessageType'])
      {
         $aSettings['JoinMessageType'] = $_REQUEST['selMessageType'.$cnumber];
         $oClientLang-&gt;setProperty('newsletter', 'joinmessagetype', $aSettings['JoinMessageType']);
      }
      if ($_REQUEST['ckbFrontendLink'.$cnumber] != $aSettings['FrontendLink'])
      {
         $aSettings['FrontendLink'] = $_REQUEST['ckbFrontendLink'.$cnumber];
         $oClient-&gt;setProperty('newsletter', 'frontendlink', $aSettings['FrontendLink']);
      }

      if ($_REQUEST['ckbUpdateHandlerID'.$cnumber] == 'enabled')
      {
         // Trick: If UpdateHandlerID is enabled, save id as client setting
         $iHandlerCatArt = $_REQUEST['selHandlerCatArt'.$cnumber];
         $oClientLang-&gt;setProperty('newsletter', 'idcatart', $iHandlerCatArt);
      }
      
      if (isValidMail($_REQUEST['txtSender'.$cnumber]) &amp;&amp; $_REQUEST['txtSender'.$cnumber] != $aSettings['SenderEMail'])
      {
         $aSettings['SenderEMail'] = $_REQUEST['txtSender'.$cnumber];
         $oClient-&gt;setProperty('global', 'sender-email', $aSettings['SenderEMail']);
      }
   }

   // Getting current handler article id
   $iHandlerCatArt = $oClientLang-&gt;getProperty('newsletter', 'idcatart');
   unset ($oClientLang);
   unset ($oClient);

   // Show options
   $oCfgTable = new UI_Config_Table;

   $oHidAction        = new cHTMLHiddenField('hidAction'.$cnumber, 'save');
   
   $oTxtSender = new cHTMLTextbox(&quot;txtSender&quot;.$cnumber, $aSettings['SenderEMail'], 30);

   $oCfgTable-&gt;setCell('sender', 0, mi18n(&quot;Sender e-mail:&quot;));
   $oCfgTable-&gt;setCell('sender', 1, $oHidAction-&gt;render().$oTxtSender-&gt;render());

   $oSelHandlerCatArt = new cHTMLInputSelectElement('selHandlerCatArt'.$cnumber, 1, '', true);
   $oOption           = new cHTMLOptionElement(mi18n(&quot;- Please select -&quot;), '');
   $oSelHandlerCatArt-&gt;addOptionElement(0, $oOption);
   $oSelHandlerCatArt-&gt;addCategories(0, true, false, false, true, true);
   $oSelHandlerCatArt-&gt;setDefault($iHandlerCatArt);

   $oCkbUpdate        = new cHTMLCheckbox('ckbUpdateHandlerID'.$cnumber, 'enabled');
   $oCkbUpdate-&gt;setEvent('click', 'if (this.checked) {document.forms[0].selHandlerCatArt'.$cnumber.'.disabled = false;} else {document.forms[0].selHandlerCatArt'.$cnumber.'.disabled = true;}');

   $oCfgTable-&gt;setCell('handler', 0, mi18n(&quot;Handler Article:&quot;));
   $oCfgTable-&gt;setCell('handler', 1, $oSelHandlerCatArt-&gt;render().&quot;\n&amp;nbsp;&quot;.$oCkbUpdate-&gt;toHTML(false).mi18n(&quot;Update&quot;));

   // Getting newsletter groups (if any)
   $oRcpGroups = new RecipientGroupCollection;
   $oRcpGroups-&gt;setWhere('idclient', $client);
   $oRcpGroups-&gt;setWhere('idlang',   $lang);
   $oRcpGroups-&gt;setWhere('defaultgroup', '0');
   $oRcpGroups-&gt;setOrder('defaultgroup DESC, groupname ASC');
   $oRcpGroups-&gt;query();
   
   // Join options
   // If newsletter groups are available, provide group options, otherwise show only
   // 'Default' option. This is necessary, as there may have been groups specified (and used)
   // but they have been deleted, later on.
   
   $oCfgTable-&gt;setCell('join_01', 0, mi18n(&quot;Join:&quot;));
   
   if ($oRcpGroups-&gt;Count() == 0) {
      // No groups available, only default group possible
   
      $oRadJoinDefault = new cHTMLRadioButton ('radJoin'.$cnumber, 'Default', '', true);
      $oCfgTable-&gt;setCell('join_01', 1, $oRadJoinDefault-&gt;toHTML(false).mi18n(&quot;default group&quot;));
   } else {
      // Groups available, show different group join options
   
      // Join default group only
      if ($aSettings['JoinSel'] == 'Default') {
         $oRadJoinDefault = new cHTMLRadioButton ('radJoin'.$cnumber, 'Default', '', true);
      } else {
         $oRadJoinDefault = new cHTMLRadioButton ('radJoin'.$cnumber, 'Default');
      }
      $oRadJoinDefault-&gt;setEvent('click', &quot;document.forms[0].elements['ckbJoinMultiple&quot;.$cnumber.&quot;'].disabled = true; document.forms[0].selGroup&quot;.$cnumber.&quot;.disabled = true;&quot;);
      $oCfgTable-&gt;setCell('join_01', 1, $oRadJoinDefault-&gt;toHTML(false).mi18n(&quot;default group&quot;));
      $oCfgTable-&gt;setRowBgColor('join_01', $cfg[&quot;color&quot;][&quot;table_dark&quot;]);
   
      // Join admin selected groups automatically
      if ($aSettings['JoinSel'] == 'Selected') {
         $oRadJoinSelected = new cHTMLRadioButton ('radJoin'.$cnumber, 'Selected', '', true);
      } else {
         $oRadJoinSelected = new cHTMLRadioButton ('radJoin'.$cnumber, 'Selected');
      }
      $oRadJoinSelected-&gt;setEvent('click', &quot;document.forms[0].elements['ckbJoinMultiple&quot;.$cnumber.&quot;'].disabled = false; document.forms[0].selGroup&quot;.$cnumber.&quot;.disabled = false;&quot;);
      $oCfgTable-&gt;setCell('join_02', 0, '');
      $oCfgTable-&gt;setCell('join_02', 1, $oRadJoinSelected-&gt;toHTML(false).mi18n(&quot;selected group(s)&quot;));
      $oCfgTable-&gt;setRowBgColor('join_02', $cfg[&quot;color&quot;][&quot;table_dark&quot;]);
   
      // Join the groups the user has selected (-&gt; provide a list for the user), optionally, the user may select more than one group
      if ($aSettings['JoinSel'] == 'UserSelected')
      {
         $oRadJoinUserSel  = new cHTMLRadioButton ('radJoin'.$cnumber, 'UserSelected', '', true);
         $oCkbJoinMultiple = new cHTMLCheckbox ('ckbJoinMultiple'.$cnumber, 'enabled', '', $aSettings['JoinMultiple']);
      } else {
         $oRadJoinUserSel  = new cHTMLRadioButton ('radJoin'.$cnumber, 'UserSelected');
         $oCkbJoinMultiple = new cHTMLCheckbox ('ckbJoinMultiple'.$cnumber, 'enabled', '', false, true);
      }
      $oRadJoinUserSel-&gt;setEvent('click', &quot;document.forms[0].elements['ckbJoinMultiple&quot;.$cnumber.&quot;'].disabled = false; document.forms[0].selGroup&quot;.$cnumber.&quot;.disabled = false;&quot;);
      $oCfgTable-&gt;setCell('join_03', 0, '');
      $oCfgTable-&gt;setCell('join_03', 1, $oRadJoinUserSel-&gt;toHTML(false).mi18n(&quot;group(s) as selected by user&quot;).'&lt;br /&gt;'.&quot;\n&quot;.$oCkbJoinMultiple-&gt;toHTML(false).mi18n(&quot;Multiple group selection allowed&quot;));
      $oCfgTable-&gt;setRowBgColor('join_03', $cfg[&quot;color&quot;][&quot;table_dark&quot;]);
   
      $oCfgTable-&gt;setCell('groups', 0, mi18n(&quot;Select group(s):&quot;));
   
      // Show groups
      // Trick: To save multiple selections in &lt;select&gt;-Element, add some JS which saves the
      // selection, comma separated in a hidden input field on change.
      $sSkript = '              &lt;script type=&quot;text/javascript&quot;&gt;&lt;!--'.&quot;\n&quot;.
                 '                  function fncUpdateSel() {'.&quot;\n&quot;.
                 '                     var strSel = &quot;&quot;;'.&quot;\n&quot;.
                 '                     for(i = 0; i &lt; document.forms[0].selGroup'.$cnumber.'.length; i++) {'.&quot;\n&quot;.
                 '                        if(document.forms[0].selGroup'.$cnumber.'.options[i].selected == true) {'.&quot;\n&quot;.
                 '                           if (strSel != &quot;&quot;)'.&quot;\n&quot;.
                 '                              strSel = strSel + &quot;,&quot;;'.&quot;\n&quot;.
                 '                           strSel = strSel + document.forms[0].selGroup'.$cnumber.'.options[i].value;'.&quot;\n&quot;.
                 '                        }'.&quot;\n&quot;.
                 '                     }'.&quot;\n&quot;.
                 '                     document.forms[0].elements[&quot;hidJoinGroups'.$cnumber.'&quot;].value = strSel;'.&quot;\n&quot;.
                 '                  }'.&quot;\n&quot;.
                 '                  //--&gt;&lt;/script&gt;'.&quot;\n&quot;;

      if ($aSettings['JoinSel'] == 'Default') {
         $oSelGroup = new cHTMLSelectElement ('selGroup'.$cnumber, '', '', true);
      } else {
         $oSelGroup = new cHTMLSelectElement ('selGroup'.$cnumber, '');
      }
      $oSelGroup-&gt;setSize(5);
      $oSelGroup-&gt;setMultiselect();
      $oSelGroup-&gt;setEvent('change', &quot;fncUpdateSel()&quot;);

      $aGroups = explode(',', $aSettings['JoinGroups']);
      while ($oRcpGroup = $oRcpGroups-&gt;next()) {
         $iID = $oRcpGroup-&gt;get('idnewsgroup');
         if (in_array ($iID, $aGroups)) {
            $oOption = new cHTMLOptionElement($oRcpGroup-&gt;get('groupname'), $iID, true);
         } else {
            $oOption = new cHTMLOptionElement($oRcpGroup-&gt;get('groupname'), $iID, false);
         }
         $oSelGroup-&gt;addOptionElement($iID, $oOption);
      }
   
      $oHidGroups = new cHTMLHiddenField ('hidJoinGroups'.$cnumber, $aSettings['JoinGroups']);
      $oCfgTable-&gt;setCell('groups', 1, $sSkript.$oSelGroup-&gt;render().$oHidGroups-&gt;render());
   }
   
   // Options: Message type (user [-&gt;selectbox], text or html)
   $oCfgTable-&gt;setCell('options_01', 0, mi18n(&quot;Options:&quot;));

   $oSelMsgType = new cHTMLSelectElement ('selMessageType'.$cnumber);
   $oOption = new cHTMLOptionElement(mi18n(&quot;User selected&quot;), &quot;user&quot;);
   $oSelMsgType-&gt;addOptionElement(0, $oOption);
   $oOption = new cHTMLOptionElement(mi18n(&quot;Text only&quot;), &quot;text&quot;);
   $oSelMsgType-&gt;addOptionElement(1, $oOption);
   $oOption = new cHTMLOptionElement(mi18n(&quot;HTML and text&quot;), &quot;html&quot;);
   $oSelMsgType-&gt;addOptionElement(2, $oOption);
   $oSelMsgType-&gt;setDefault($aSettings['JoinMessageType']);

   $oCfgTable-&gt;setCell('options_01', 1, mi18n(&quot;Default message type:&quot;).'&amp;nbsp;'.$oSelMsgType-&gt;render());

   // Frontend Link
   $oCfgTable-&gt;setCell('link_01', 0, mi18n(&quot;Frontend Users:&quot;));
   $oCkbLink = new cHTMLCheckbox('ckbFrontendLink'.$cnumber, 'enabled', '', $aSettings['FrontendLink']);
   
   $sSkript = &quot;if (this.checked) {
                  document.forms[0].elements['CMS_VAR[5]'][0].disabled = false;
                  document.forms[0].elements['CMS_VAR[5]'][1].disabled = false;
                  document.forms[0].elements['CMS_VAR[6]'][0].disabled = false;
                  document.forms[0].elements['CMS_VAR[6]'][1].disabled = false;
                  document.forms[0].elements['CMS_VAR[6]'][2].disabled = false;
               } else {
                  document.forms[0].elements['CMS_VAR[5]'][0].disabled = true;
                  document.forms[0].elements['CMS_VAR[5]'][1].disabled = true;
                  document.forms[0].elements['CMS_VAR[6]'][0].disabled = true;
                  document.forms[0].elements['CMS_VAR[6]'][1].disabled = true;
                  document.forms[0].elements['CMS_VAR[6]'][2].disabled = true;}&quot;;
   $oCkbLink-&gt;setEvent(&quot;click&quot;, $sSkript);

   $oCfgTable-&gt;setCell('link_01', 1, $oCkbLink-&gt;toHTML(false).mi18n(&quot;Activate Link&quot;));
   $oCfgTable-&gt;setRowBgColor('link_01', $cfg[&quot;color&quot;][&quot;table_light&quot;]);
   
   // Link: Activation options
   $oCfgTable-&gt;setCell('link_02', 0, '');
   
   switch ($aSettings['FrontendConfirm'])
   {
      case &quot;Nothing&quot;:
         $oRadActivateUser    = new cHTMLRadioButton (&quot;CMS_VAR[5]&quot;, &quot;ActivateUser&quot;, &quot;&quot;, false);
         $oRadActivateNothing = new cHTMLRadioButton (&quot;CMS_VAR[5]&quot;, &quot;Nothing&quot;,      &quot;&quot;, true);
         break;
      default:
         $oRadActivateUser    = new cHTMLRadioButton (&quot;CMS_VAR[5]&quot;, &quot;ActivateUser&quot;, &quot;&quot;, true);
         $oRadActivateNothing = new cHTMLRadioButton (&quot;CMS_VAR[5]&quot;, &quot;Nothing&quot;,      &quot;&quot;, false);
   }

   switch ($aSettings['FrontendDel'])
   {
      case &quot;DisableUser&quot;:
         $oRadDelDelete  = new cHTMLRadioButton (&quot;CMS_VAR[6]&quot;, &quot;DeleteUser&quot;,  &quot;&quot;, false);
         $oRadDelDisable = new cHTMLRadioButton (&quot;CMS_VAR[6]&quot;, &quot;DisableUser&quot;, &quot;&quot;, true);
         $oRadDelNothing = new cHTMLRadioButton (&quot;CMS_VAR[6]&quot;, &quot;Nothing&quot;,     &quot;&quot;, false);
         break;
      case &quot;Nothing&quot;:
         $oRadDelDelete  = new cHTMLRadioButton (&quot;CMS_VAR[6]&quot;, &quot;DeleteUser&quot;,  &quot;&quot;, false);
         $oRadDelDisable = new cHTMLRadioButton (&quot;CMS_VAR[6]&quot;, &quot;DisableUser&quot;, &quot;&quot;, false);
         $oRadDelNothing = new cHTMLRadioButton (&quot;CMS_VAR[6]&quot;, &quot;Nothing&quot;,     &quot;&quot;, true);
         break;
      default:
         $oRadDelDelete  = new cHTMLRadioButton (&quot;CMS_VAR[6]&quot;, &quot;DeleteUser&quot;,  &quot;&quot;, true);
         $oRadDelDisable = new cHTMLRadioButton (&quot;CMS_VAR[6]&quot;, &quot;DisableUser&quot;, &quot;&quot;, false);
         $oRadDelNothing = new cHTMLRadioButton (&quot;CMS_VAR[6]&quot;, &quot;Nothing&quot;,     &quot;&quot;, false);
   }

   if ($aSettings['FrontendLink'] == '')
   {
      $oRadActivateUser-&gt;setDisabled(true);
      $oRadActivateNothing-&gt;setDisabled(true);
      $oRadDelDelete-&gt;setDisabled(true);
      $oRadDelDisable-&gt;setDisabled(true);
      $oRadDelNothing-&gt;setDisabled(true);
   }
   $oCfgTable-&gt;setCell('link_02', 1, mi18n(&quot;Confirmation means:&quot;).'&lt;br /&gt;'.
                                     $oRadActivateUser-&gt;toHTML(false).mi18n(&quot;Activate&quot;).
                                     $oRadActivateNothing-&gt;toHTML(false).mi18n(&quot;No changes&quot;));
   $oCfgTable-&gt;setRowBgColor('link_02', $cfg[&quot;color&quot;][&quot;table_light&quot;]);

   // Link: Cancellation options
   $oCfgTable-&gt;setCell('link_03', 0, '');

   $oCfgTable-&gt;setCell('link_03', 1, mi18n(&quot;Cancellation means:&quot;).'&lt;br /&gt;'.
                                     $oRadDelDelete-&gt;toHTML(false).mi18n(&quot;Delete&quot;).
                                     $oRadDelDisable-&gt;toHTML(false).mi18n(&quot;Disable&quot;).
                                     $oRadDelNothing-&gt;toHTML(false).mi18n(&quot;No changes&quot;));
   $oCfgTable-&gt;setRowBgColor('link_03', $cfg[&quot;color&quot;][&quot;table_light&quot;]);

   $oCfgTable-&gt;render(true);</input>
<output>&lt;?php
// Initialisation
$oClientLang = new cApiClientLanguage(false, $client, $lang);
$oClient     = new cApiClient($client);
$oRecipients = new RecipientCollection;
$sMessage = &quot;&amp;nbsp;&quot;;
unset($recipient); // Unset any existing recipient objects - note, that it must be $recipient for the plugins...

$aSettings   = array();
$aSettings['JoinSel']         = $oClientLang-&gt;getProperty('newsletter', 'joinsel');
$aSettings['JoinMultiple']    = $oClientLang-&gt;getProperty('newsletter', 'joinmultiple');
$aSettings['JoinGroups']      = $oClientLang-&gt;getProperty('newsletter', 'joingroups');
$aSettings['JoinMessageType'] = $oClientLang-&gt;getProperty('newsletter', 'joinmessagetype');
$aSettings['FrontendLink']    = $oClient-&gt;getProperty('newsletter', 'frontendlink'); # Note: Stored for client, as frontendusers are language independent
$aSettings['FrontendConfirm'] = &quot;CMS_VALUE[5]&quot;;
$aSettings['FrontendDel']     = &quot;CMS_VALUE[6]&quot;;
$aSettings['SenderEMail']     = $oClient-&gt;getProperty('global', 'sender-email'); # This one could be recycled by other modules...
$aSettings['HandlerID']       = $oClientLang-&gt;getProperty('newsletter', 'idcatart');

$sTemplate = 'newsletter_handler.html';

if (!isset($oPage) || !is_object($oPage)) {
  $oPage = new Template;
}
$oPage-&gt;reset();

// If there is no selection option set or if no groups has been selected, activate option Default
if ($aSettings['JoinSel'] == '' || $aSettings['JoinGroups'] == '') {
  $aSettings['JoinSel'] = &quot;Default&quot;;
}
if ($aSettings['FrontendConfirm'] == '') {
  $aSettings['FrontendConfirm'] = &quot;ActivateUser&quot;;
}
if ($aSettings['FrontendDel'] == '') {
  $aSettings['FrontendDel'] = &quot;DeleteUser&quot;;
}

if ($_POST['action'] == &quot;subscribe&quot;) {
  if (!isset($_POST['email']) || !$_POST['email']) {
     $sMessage = mi18n(&quot;Please specify an e-mail address.&quot;);
  } elseif (!isValidMail($_POST['email']) || strpos($_POST['email'], &quot;,&quot;) != false || strpos($_POST['email'], &quot;;&quot;) != false) {
     $sMessage = mi18n(&quot;Please specify a valid e-mail address.&quot;);
  } elseif ($oRecipients-&gt;emailExists($_POST['email'])) {
     $sMessage = mi18n(&quot;This e-mail address has been already registered for the newsletter.&quot;);
  } else {
     $sEMail = preg_replace('/[\r\n]+/', '', stripslashes($_POST['email']));
     $sName  = stripslashes($_POST[&quot;emailname&quot;]);

     // Which newsletter type should the recipient receive?
     switch ($aSettings['JoinMessageType'])
     {
        case &quot;user&quot;:
           if ($_POST[&quot;selNewsletterType&quot;] == 1) {
              $iMessageType = 1; // html
           } else {
              $iMessageType = 0; // text
           }
           break;
        case &quot;html&quot;:
           $iMessageType = 1; // html
           break;
        default:
           $iMessageType = 0; // Default: text
     }

     // Analyze group specification
     switch ($aSettings['JoinSel'])
     {
        case &quot;Selected&quot;:
           $recipient = $oRecipients-&gt;create($sEMail, $sName, 0, $aSettings['JoinGroups'], $iMessageType);
           break;
        case &quot;UserSelected&quot;:
           $iSelCount = count($_POST['selNewsletterGroup']);

           if ($iSelCount == 0) {
              $recipient = $oRecipients-&gt;create($sEMail, $sName, 0, &quot;&quot;, $iMessageType); // No group selected
           } else {
              if ($iSelCount &gt; 1 &amp;&amp; $aSettings['JoinMultiple'] != &quot;enabled&quot;) {
                 $sMessage = mi18n(&quot;Please select one group, only.&quot;);
              } else {
                 // Recipient wants to join special groups
                 $aGroups = explode(&quot;,&quot;, $aSettings['JoinGroups']);

                 /* Check, if received data is valid and matches the group selection */
                 $bError = false;
                 foreach ($_POST['selNewsletterGroup'] as $iIDGroup)
                 {
                    if (!is_numeric($iIDGroup) || !in_array($iIDGroup, $aGroups))
                    {
                       $bError = true;
                       break;
                    }
                 }

                 if ($bError) {
                    $sMessage = mi18n(&quot;There was an error processing your request. Please ask the webmaster for help.&quot;);
                 } else {
                    $recipient = $oRecipients-&gt;create($sEMail, $sName, 0, implode(&quot;,&quot;, $_POST['selNewsletterGroup']));
                 }
              }
           }
           break;
        default:
           $recipient = $oRecipients-&gt;create($sEMail, $sName, 0, &quot;&quot;, $iMessageType);
     }

     if ($recipient)
     {
        // Add here code, if you like to store additional information per &gt;recipient&lt; (see frontenduser below)
        // Example: $recipient-&gt;setProperty(&quot;contact&quot;, &quot;firstname&quot;, $_REQUEST[&quot;firstname&quot;]);
        // contact/firstname have to match the values used in the firstname-recipient-plugin
        // $_REQUEST[&quot;firstname&quot;] contains the data from the input-field firstname in the
        // Form module (-&gt; there has to be a field with this name)
        // Note: You should check the values you get (safety)!!!

        $sBody = mi18n(&quot;txtMailSubscribe&quot;).&quot;\n&quot;.'&lt;a href=&quot;'.$cfgClient[$client]['path']['htmlpath'].&quot;front_content.php?changelang=&quot;.$lang.&quot;&amp;idcatart=&quot;.$aSettings['HandlerID'].&quot;&amp;confirm=&quot;.$recipient-&gt;get(&quot;hash&quot;).'&quot;&gt;'.$cfgClient[$client]['path']['htmlpath'].&quot;front_content.php?changelang=&quot;.$lang.&quot;&amp;idcatart=&quot;.$aSettings['HandlerID'].&quot;&amp;confirm=&quot;.$recipient-&gt;get(&quot;hash&quot;).'&lt;/a&gt;'.&quot;\n\n&quot;;
        if (sendHtmlMail($sBody, mi18n(&quot;Newsletter: Confirmation&quot;), array('name' =&gt; $sName, 'email' =&gt; $sEMail), $aSettings['SenderEMail'], $aSettings['SenderEMail'], 'mail'))
        {
           $sMessage = mi18n(&quot;Dear subscriber,&lt;br&gt;your e-mail address is now subscribed for our newsletter. You will now receive an e-mail asking you to confirm your subscription.&quot;);

           if ($aSettings['FrontendLink'] == &quot;enabled&quot;)
           {
              $oFrontendUsers = new FrontendUserCollection;

              if (!$oFrontendUsers-&gt;userExists($sEMail))
              {
                 if ($frontenduser = $oFrontendUsers-&gt;create($sEMail)) // it's &quot;frontenduser&quot; (instead of oFrontendUser) for plugins...
                 {
                    // Add here code, if you like to store additional information per &gt;frontenduser&lt;
                    // Example: $frontenduser-&gt;setProperty(&quot;contact&quot;, &quot;firstname&quot;, $_REQUEST[&quot;firstname&quot;]);
                    // contact/firstname have to match the values used in the firstname-frontenduser-plugin
                    // $_REQUEST[&quot;firstname&quot;] contains the data from the input-field firstname in the
                    // Form module (-&gt; there has to be a field with this name)
                    // Note: You should check the values you get (safety)!!!

                    if ($aSettings['FrontendConfirm'] == &quot;ActivateUser&quot;)
                    {
                       // Inform about frontend user account creation
                       $sMessage .= mi18n(&quot;&lt;br&gt;&lt;br&gt;After the confirmation you will also receive a password which you can use with your e-mail address to logon to special areas on this website.&quot;);
                    }
                 } else {
                    $sMessage .= mi18n(&quot;&lt;br&gt;&lt;br&gt;Sorry, there was a problem creating your website account. Please ask the webmaster for help.&quot;);
                 }
              }
           }
        } else {
           $sMessage = mi18n(&quot;Sorry, there was a problem sending the confirmation mail to your e-mail address. Please ask the webmaster for help.&quot;);
        }
     } else {
        $sMessage = mi18n(&quot;Sorry, there was a problem subscribing your e-mail address for the newsletter. Please ask the webmaster for help.&quot;);
     }
  }
} elseif ($_POST['action'] == &quot;delete&quot;) {
  if (!isset($_POST['email']) || !$_POST['email']) {
     $sMessage = mi18n(&quot;Please specify an e-mail address.&quot;);
  } elseif (!isValidMail($_POST['email']) || strpos($_POST['email'], &quot;,&quot;) != false || strpos($_POST['email'], &quot;;&quot;) != false) {
     $sMessage = mi18n(&quot;Please specify a valid e-mail address.&quot;);
  } elseif ($recipient = $oRecipients-&gt;emailExists($_POST['email'])) {
     $sBody = mi18n(&quot;txtMailDelete&quot;).&quot;\n&quot;.$cfgClient[$client]['path']['htmlpath'].&quot;front_content.php?changelang=&quot;.$lang.&quot;&amp;idcatart=&quot;.$aSettings['HandlerID'].&quot;&amp;unsubscribe=&quot;.$recipient-&gt;get(&quot;hash&quot;).&quot;\n\n&quot;;
     if (sendHtmlMail($sBody, mi18n(&quot;Newsletter: Cancel subscription&quot;), array('name' =&gt; '', 'email' =&gt; $_POST['email']), $aSettings['SenderEMail'], $aSettings['SenderEMail'], 'mail'))
     {
        $sMessage = mi18n(&quot;Dear subscriber,&lt;br&gt;a mail has been sent to your e-mail address. Please confirm the cancelation of the newsletter subscription.&quot;);
     } else {
        $sMessage = mi18n(&quot;Sorry, there was a problem sending you the cancelation confirmation e-mail. Please ask the webmaster for help.&quot;);
     }
  } else {
     $sMessage = mi18n(&quot;Sorry, the e-mail address was not found.&quot;);
  }
} elseif (strlen($_GET['confirm']) == 30 &amp;&amp; is_alphanumeric($_GET['confirm'])) {
  $oRecipients-&gt;setWhere(&quot;idclient&quot;, $client);
  $oRecipients-&gt;setWhere(&quot;idlang&quot;, $lang);
  $oRecipients-&gt;setWhere(&quot;hash&quot;, $_GET['confirm']);
  $oRecipients-&gt;query();

  if ($recipient = $oRecipients-&gt;next())
  {
     $iID    = $recipient-&gt;get(&quot;idnewsrcp&quot;); // For some reason, $recipient may get invalid later on - save id
     $sEMail = $recipient-&gt;get(&quot;email&quot;);     // ... and email
     $recipient-&gt;set(&quot;confirmed&quot;, 1);
     $recipient-&gt;set(&quot;confirmeddate&quot;, date(&quot;Y-m-d H:i:s&quot;), false);
     $recipient-&gt;set(&quot;deactivated&quot;, 0);
     $recipient-&gt;store();

     $sMessage = mi18n(&quot;Thank you! You have confirmed your subscription to our newsletter!&quot;);

     $oNewsletters = New NewsletterCollection;
     $oNewsletters-&gt;setWhere(&quot;idclient&quot;, $client);
     $oNewsletters-&gt;setWhere(&quot;idlang&quot;, $lang);
     $oNewsletters-&gt;setWhere(&quot;welcome&quot;, '1');
     $oNewsletters-&gt;query();

     if ($oNewsletter = $oNewsletters-&gt;next())
     {
        $aRecipients = array(); // Needed, as used by reference
        $oNewsletter-&gt;sendDirect($aSettings['HandlerID'], $iID, false, $aRecipients, $encoding[$lang]);

        $sMessage .= mi18n(&quot; The welcome newsletter is already on the way to you!&quot;);
     }
     
     if ($aSettings['FrontendLink'] == &quot;enabled&quot; &amp;&amp; $aSettings['FrontendConfirm'] == &quot;ActivateUser&quot;)
     {
        $oFrontendUsers = new FrontendUserCollection;
        $oFrontendUsers-&gt;setWhere(&quot;idclient&quot;, $client);
        $oFrontendUsers-&gt;setWhere(&quot;username&quot;, $sEMail);
        $oFrontendUsers-&gt;query();

        if ($frontenduser = $oFrontendUsers-&gt;next())
        {
           $frontenduser-&gt;set(&quot;active&quot;, 1);
           $sPassword = substr(md5(rand()),0,8); // Generating password
           $frontenduser-&gt;set(&quot;password&quot;, $sPassword);
           $frontenduser-&gt;store();

           $sMessage .= mi18n(&quot;&lt;br&gt;&lt;br&gt;Additionally, your website account has been activated. You can now use the following username and password to log in to access special areas on our website:&lt;br&gt;&quot;);
           $sMessage .= mi18n(&quot;Username: &quot;).$sEMail.mi18n(&quot;&lt;br&gt;Password: &quot;).$sPassword;

           $sBody = mi18n(&quot;txtMailPassword&quot;).&quot;\n\n&quot;.mi18n(&quot;Username: &quot;).$sEMail.&quot;\n&quot;.mi18n(&quot;Password: &quot;).$sPassword.&quot;\n\n&quot;.mi18n(&quot;Click here to login: &quot;).$cfgClient[$client]['path']['htmlpath'].&quot;front_content.php?changelang=&quot;.$lang;
           if (sendHtmlMail($sBody, mi18n(&quot;Website account&quot;), array('name' =&gt; '', 'email' =&gt; $sEMail), $aSettings['SenderEMail'], $aSettings['SenderEMail'], 'mail'))
           {
              $sMessage .= mi18n(&quot;&lt;br&gt;&lt;br&gt;The account details and the password has also been sent to your mail account.&quot;);
           } else {
              $sMessage .= mi18n(&quot;&lt;br&gt;&lt;br&gt;&lt;b&gt;Sorry, there was a problem sending you the account details by mail. Please remember the given password.&lt;/b&gt;&lt;b&gt;&quot;);
           }
        } else {
           $sMessage .= mi18n(&quot;&lt;br&gt;&lt;br&gt;Sorry, there was a problem activating your website account, also. Please ask the webmaster for help.&quot;);
        }
     }
  } else {
     $sMessage = mi18n(&quot;Sorry, there was a problem confirming your subscription. Please ask the webmaster for help.&quot;);
  }
} elseif (strlen($_GET['stop']) == 30 &amp;&amp; is_alphanumeric($_GET['stop'])) {
  $oRecipients-&gt;setWhere(&quot;idclient&quot;, $client);
  $oRecipients-&gt;setWhere(&quot;idlang&quot;, $lang);
  $oRecipients-&gt;setWhere(&quot;hash&quot;, $_GET['stop']);
  $oRecipients-&gt;query();

  if ($recipient = $oRecipients-&gt;next())
  {
     $recipient-&gt;set(&quot;deactivated&quot;, 1);
     $recipient-&gt;store();

     $sMessage = mi18n(&quot;Your newsletter subscription has been paused.&quot;);
  } else {
     $sMessage = mi18n(&quot;Sorry, there was a problem pausing your newsletter subscription. Please ask the webmaster for help.&quot;);
  }
} elseif (strlen($_GET['goon']) == 30 &amp;&amp; is_alphanumeric($_GET['goon'])) {
  $oRecipients-&gt;setWhere(&quot;idclient&quot;, $client);
  $oRecipients-&gt;setWhere(&quot;idlang&quot;, $lang);
  $oRecipients-&gt;setWhere(&quot;hash&quot;, $_GET['goon']);
  $oRecipients-&gt;query();

  if ($recipient = $oRecipients-&gt;next())
  {
     $recipient-&gt;set(&quot;deactivated&quot;, 0);
     $recipient-&gt;store();

     $sMessage = mi18n(&quot;Newsletter subscription has been resumed.&quot;);
  } else {
     $sMessage = mi18n(&quot;Sorry, there was a problem resuming your newsletter subscription. Please ask the webmaster for help.&quot;);
  }
} elseif (strlen($_GET['unsubscribe']) == 30 &amp;&amp; is_alphanumeric($_GET['unsubscribe'])) {
  $oRecipients-&gt;setWhere(&quot;idclient&quot;, $client);
  $oRecipients-&gt;setWhere(&quot;idlang&quot;, $lang);
  $oRecipients-&gt;setWhere(&quot;hash&quot;, $_GET['unsubscribe']);
  $oRecipients-&gt;query();
  
  if ($recipient = $oRecipients-&gt;next()) {
     $sEMail = $recipient-&gt;get(&quot;email&quot;); // Saving recipient e-mail address for frontend account
     $oRecipients-&gt;delete($recipient-&gt;get(&quot;idnewsrcp&quot;));

     $sMessage = mi18n(&quot;Your e-mail address has been removed from our list of newsletter recipients.&quot;);

     if ($aSettings['FrontendLink'] == &quot;enabled&quot;)
     {
        $oFrontendUsers = new FrontendUserCollection;
        $oFrontendUsers-&gt;setWhere(&quot;idclient&quot;, $client);
        $oFrontendUsers-&gt;setWhere(&quot;username&quot;, $sEMail);
        $oFrontendUsers-&gt;query();

        if ($frontenduser = $oFrontendUsers-&gt;next())
        {
           switch ($aSettings['FrontendDel'])
           {
              case &quot;DeleteUser&quot;: // Deleting frontend account
                 $oFrontendUsers-&gt;delete($frontenduser-&gt;get(&quot;idfrontenduser&quot;));
                 $sMessage .= mi18n(&quot; Your website account has been deleted.&quot;);
                 break;
              case &quot;DisableUser&quot;: // Disabling frontend account
                 $frontenduser-&gt;set(&quot;active&quot;, 0);
                 $frontenduser-&gt;store();
                 $sMessage .= mi18n(&quot; Your website account has been disabled.&quot;);
                 break;
              default:
           }
        }
     }
  } else {
     $sMessage = mi18n(&quot;Sorry, there was a problem removing your e-mail address. Please ask the webmaster for help.&quot;);
  }
}

$oPage-&gt;set('s', 'CONTENT', $sMessage);
$oPage-&gt;generate('templates/'.$sTemplate);
?&gt;</output>
</module>
<jsfiles/>
<tplfiles><area>tplfiles</area>
<name>newsletter_handler.html</name>
<content>{CONTENT}</content>
</tplfiles>
<cssfiles/>
<layouts/>
</modulepackage>
